<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.0-preview">
  <Workflow xmlns:q1="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q2="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q3="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="MemberSelector">
        <Selector>Width,Height</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Centroid" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:ColorBalance">
          <q1:Scale>
            <q1:Val0>3</q1:Val0>
            <q1:Val1>3</q1:Val1>
            <q1:Val2>3</q1:Val2>
            <q1:Val3>1</q1:Val3>
          </q1:Scale>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timer">
          <DueTime>PT0S</DueTime>
          <Period>PT1S</Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Skip">
          <Count>3</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Name>distance</q2:Name>
        <q2:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
@returns(float)
def process(value):
  radius = 0.25
  width1 = 0.4
  height1 = 0.5
  image = value.Item2
  output = image.Clone()
  a = 10000
  if value.Item1.X != 'NaN':
    dx = (value.Item1.X - value.Item3.Item1/2)*width1/value.Item3.Item1
    dy = (value.Item1.Y - value.Item3.Item2/2)*height1/value.Item3.Item2
    a= math.hypot(dx,dy)
  return a</q2:Script>
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Name>velocity</q2:Name>
        <q2:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
@returns(float)
def process(value):
  width1 = 0.4;
  height1 = 0.5;
  velocity = 0.01
  interval = 4.0
  zhenlv = 24.84
  if value.Item1.X != 'NaN'or value.Item4.X != 'NaN' or value.Item1.Y != 'NaN'or value.Item4.Y != 'NaN':
    dx = (value.Item1.X - value.Item4.X)*zhenlv*width1/(value.Item3.Item1)/interval
    dy = (value.Item1.Y - value.Item4.Y)*zhenlv*height1/(value.Item3.Item2)/interval
    velocity= math.hypot(dx,dy)
  return velocity</q2:Script>
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Name>send</q2:Name>
        <q2:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
@returns(str)
def process(value):
  axes_x = 1920
  axes_y = 1080
  ratio_x =  axes_x/1.0/value.Item3.Item1
  ratio_y = axes_y/(value.Item3.Item2)
  a = 'Start' + ' ' + str(0) + ' '  + str(0) +  ' ' + str(0) + ' ' + str(0) + ' !'
  if (value.Item1.X == 'NaN') or (value.Item2.X == 'NaN')or(value.Item1.Y == 'NaN')or(value.Item2.X == 'NaN'):
    #value.Item1.X = 0.0
    a = 'Start' + ' ' + str(0) + ' '  + str(0) +  ' ' + str(0) + ' ' + str(0) + ' !'
  else:
    #x1 = 960
    #y1 = 0
    #x1 = 1440
    #y1 = 560
    #x1 = 1920
    #y1 = 1080
    x0 = round(value.Item1.X*ratio_x)
    x1 = x0 - axes_x/2 ;
    y0 = round(value.Item1.Y*ratio_y)     #  坐标系的变换，ymax = 930
    y1 = y0 - axes_y/2 ;
    #dx = 0.0
    #dy = 1.0
    #x1 = round(value.Item2.X)
    #y1 = round(value.Item2.Y)     #  坐标系的变换，ymax = 930
    dx = round(value.Item2.X-value.Item1.X)
    dy = round(value.Item2.Y-value.Item1.Y)
    a = 'Start' + ' ' + str(x1) + ' '  + str(y1) +  ' ' + str(dx) + ' ' + str(dy) + ' !'
    #print(a)
  return a</q2:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:CameraCapture">
          <q1:Index>0</q1:Index>
          <q1:CaptureProperties>
            <q1:CapturePropertyAssignment>
              <q1:Property>PosMsec</q1:Property>
              <q1:Value>0</q1:Value>
            </q1:CapturePropertyAssignment>
          </q1:CaptureProperties>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="WithLatestFrom" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item2</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q3:SerialStringWrite">
          <q3:PortName>COM3</q3:PortName>
          <q3:NewLine>\r\n</q3:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="q1:VideoWriter">
            <q1:FileName>D:\bonsai_data\liuhaoran\789.avi</q1:FileName>
            <q1:Suffix>FileCount</q1:Suffix>
            <q1:Buffered>true</q1:Buffered>
            <q1:Overwrite>true</q1:Overwrite>
            <q1:FourCC>FMP4</q1:FourCC>
            <q1:FrameRate>25</q1:FrameRate>
            <q1:FrameSize>
              <q1:Width>0</q1:Width>
              <q1:Height>0</q1:Height>
            </q1:FrameSize>
            <q1:ResizeInterpolation>NearestNeighbor</q1:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
@returns(str)
def process(value):
  a = value
  if a!= 'NAN':
    b = a.split(' ')
    ji = math.hypot(int(float(b[3])),int(float(b[4])))
    c = 'Start' + ' ' + str((int(float(b[1])))) + ' '  + str((int(float(b[2])))) +  ' ' + str((int(float(b[3])))) + ' ' + str((int(float(b[4])))) + ' !'
  else:
    c = -1
  #print(b11)
  return c

'''
  b1 = float(b[1])
  b11 = int(b1)
  b111 =  str(b11)
  b2 = float(b[2])
  b22 = int(b2)
  b222 =  str(b22)
'''</q2:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Skip">
          <Count>4</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Name>Trigger ROI</q2:Name>
        <q2:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
@returns(IplImage)
def process(value):
  width1 = 40;
  hight1 = 50;
  radius = 10; 
  image = value.Item2
  output = image.Clone()
  dx = (value.Item1.X - value.Item3.Item1/2)*width1/value.Item3.Item1
  dy = (value.Item1.Y - value.Item3.Item2/2)*hight1/value.Item3.Item2
  a= math.hypot(dx,dy)
  if a &lt; radius:
    CV.Circle(output, Point(value.Item3.Item1/2,value.Item3.Item2/2), value.Item3.Item1/4, Scalar.Rgb(0, 255, 0), thickness = 5)
  else:
    CV.Circle(output, Point(value.Item3.Item1/2,value.Item3.Item2/2), value.Item3.Item1/4, Scalar.Rgb(0, 0, 255), thickness = 5)

  return output</q2:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timestamp" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Timestamp.TimeOfDay</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="Subtract" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Take">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>TotalSeconds</Selector>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="q3:CsvWriter">
          <q3:FileName>D:\bonsai_data\liuhaoran\123.csv</q3:FileName>
          <q3:Append>false</q3:Append>
          <q3:Overwrite>true</q3:Overwrite>
          <q3:Suffix>FileCount</q3:Suffix>
          <q3:IncludeHeader>false</q3:IncludeHeader>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="q3:CsvWriter">
          <q3:FileName>D:\bonsai_data\liuhaoran\456.csv</q3:FileName>
          <q3:Append>false</q3:Append>
          <q3:Overwrite>true</q3:Overwrite>
          <q3:Suffix>FileCount</q3:Suffix>
          <q3:IncludeHeader>false</q3:IncludeHeader>
        </Builder>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
@returns(float)
def process(value):
  dst_zhenlv = 25
  zhenlv = 24.84
  b= dst_zhenlv/zhenlv
  a = value/(b) 
  return a</q2:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="WithLatestFrom" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Undistort">
          <q1:ImageSize xsi:nil="true" />
          <q1:Alpha>0</q1:Alpha>
          <q1:FocalLength>
            <q1:X>100000</q1:X>
            <q1:Y>100000</q1:Y>
          </q1:FocalLength>
          <q1:PrincipalPoint>
            <q1:X>320</q1:X>
            <q1:Y>240</q1:Y>
          </q1:PrincipalPoint>
          <q1:RadialDistortion>
            <q1:X>-32000</q1:X>
            <q1:Y>0</q1:Y>
            <q1:Z>0</q1:Z>
          </q1:RadialDistortion>
          <q1:TangentialDistortion>
            <q1:X>-3.5</q1:X>
            <q1:Y>-1</q1:Y>
          </q1:TangentialDistortion>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Crop">
          <q1:RegionOfInterest>
            <q1:X>132</q1:X>
            <q1:Y>82</q1:Y>
            <q1:Width>354</q1:Width>
            <q1:Height>283</q1:Height>
          </q1:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Flip">
          <q1:Mode>Horizontal</q1:Mode>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>TotalMilliseconds</Selector>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>judge_condition</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="LessThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0.15</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="LessThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0.1</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="WorkflowPropertyOfInt64">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="DistinctUntilChanged" />
            </Expression>
            <Expression xsi:type="LogicalAnd" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="GateInterval">
                <Interval>PT10S</Interval>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source2</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source3</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="CombineLatest" />
            </Expression>
            <Expression xsi:type="Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>10</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>10</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>10</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>11</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>10</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>11</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Condition">
        <Name>RisingEdge</Name>
        <Description />
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>FindCenter</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:Grayscale" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:AdaptiveThreshold">
                <q1:MaxValue>255</q1:MaxValue>
                <q1:AdaptiveMethod>MeanC</q1:AdaptiveMethod>
                <q1:ThresholdType>BinaryInv</q1:ThresholdType>
                <q1:BlockSize>131</q1:BlockSize>
                <q1:Parameter>70</q1:Parameter>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:FindContours">
                <q1:Mode>ConnectedComponent</q1:Mode>
                <q1:Method>ChainApproxNone</q1:Method>
                <q1:Offset>
                  <q1:X>0</q1:X>
                  <q1:Y>0</q1:Y>
                </q1:Offset>
                <q1:MinArea>400</q1:MinArea>
                <q1:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>2</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>0</From>
        <To>26</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>0</From>
        <To>16</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>26</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>15</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>16</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>36</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>34</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>26</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>34</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>34</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>10</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>29</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>32</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>11</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>14</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>2</To>
        <Label>Source4</Label>
      </Edge>
      <Edge>
        <From>16</From>
        <To>17</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>18</From>
        <To>19</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>19</From>
        <To>20</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>19</From>
        <To>22</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>20</From>
        <To>21</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>23</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>33</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>22</From>
        <To>20</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>23</From>
        <To>27</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>26</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>27</From>
        <To>29</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>28</From>
        <To>24</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>29</From>
        <To>28</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>30</From>
        <To>31</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>30</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>31</From>
        <To>2</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>31</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>31</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>31</From>
        <To>16</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>31</From>
        <To>18</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>32</From>
        <To>30</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>33</From>
        <To>25</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>34</From>
        <To>35</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>35</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>35</From>
        <To>28</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>36</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Vision.Centroid, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.ColorBalance, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timer, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Skip, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.CameraCapture, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.WithLatestFrom, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.SerialStringWrite, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.VideoWriter, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.SubtractBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Take, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Undistort, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Flip, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.LessThanBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.DoubleProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.GreaterThanBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.DistinctUntilChanged, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.LogicalAndBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.GateInterval, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.AdaptiveThreshold, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LargestBinaryRegion, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>